diff --git a/docs/PRD.md b/docs/PRD.md
index aa45271..fb29142 100644
--- a/docs/PRD.md
+++ b/docs/PRD.md
@@ -1,9 +1,17 @@
-# PRD — Derived Snapshot
+# PRD — Codex Orchestrator Bootstrap (Mirror)
 
-> **Source of truth:** No canonical PRD yet in /tasks
-> This file is a human-friendly mirror. When the PRD in `/tasks` changes, update this snapshot.
+> **Source of truth:** `tasks/0001-prd-sxswhack25.md`  
+> **Last mirrored:** 2025-10-16 — see `.runs/0001/2025-10-16T23-??-??Z/manifest.json`
 
-## How to Use
-- Draft the canonical PRD under `/tasks` using `.agent/task/templates/prd-template.md` and guidance in `/.ai-dev-tasks/create-prd.md`.
-- Once approved, mirror substantive updates here with a timestamped note.
-- Keep this snapshot aligned with the canonical `/tasks` artifact before sharing broadly.
+## Summary
+- Establish deterministic Codex MCP workflow for SXSWHACK25.
+- Capture guardrail logs (`spec-guard`, lint, eval) with manifest evidence.
+
+## Goals
+- Reuse orchestrator checkout at `/Users/asabeko/Documents/Code/CO`.
+- Anchor MCP server to `/Users/asabeko/Documents/Code/SXSWHACK25`.
+- Keep `/tasks` and `.runs` artifacts in sync for review.
+
+## Notes
+- Guardrail commands and MCP session metadata live in `.runs/`.
+- Update mirror notes when canonical PRD changes.
diff --git a/scripts/spec-guard.sh b/scripts/spec-guard.sh
index d70bfd3..3270730 100755
--- a/scripts/spec-guard.sh
+++ b/scripts/spec-guard.sh
@@ -9,14 +9,20 @@ if [[ ! -f "$INDEX_FILE" ]]; then
   exit 1
 fi
 
-python3 <<'PYTHON'
+SPEC_GUARD_ROOT="$ROOT_DIR" python3 <<'PYTHON'
 import json
 import sys
 import datetime
 import re
+import os
 from pathlib import Path
 
-root = Path(__file__).resolve().parent.parent
+root_env = os.environ.get("SPEC_GUARD_ROOT")
+if root_env:
+    root = Path(root_env)
+else:
+    root = Path(__file__).resolve().parent.parent
+
 index_path = root / "tasks" / "index.json"
 
 try:
diff --git a/tasks/0001-prd-sxswhack25.md b/tasks/0001-prd-sxswhack25.md
new file mode 100644
index 0000000..2f9420b
--- /dev/null
+++ b/tasks/0001-prd-sxswhack25.md
@@ -0,0 +1,37 @@
+# Codex Orchestrator Bootstrap (Task 0001)
+
+## Summary
+- Establish a deterministic Codex MCP workflow for the SXSWHACK25 codebase.
+- Ensure repository guardrails (spec guard, lint, eval) run cleanly with artifacts captured for review.
+
+## Goals
+- Provide a reproducible MCP session anchored to `/Users/asabeko/Documents/Code/SXSWHACK25`.
+- Maintain `/tasks` as the canonical source for PRDs, task lists, and manifests with checkbox state reflecting progress.
+- Capture command logs and manifests under `.runs/0001/<timestamp>/` for auditability.
+
+## Non-Goals
+- Ship production features or modify application runtime code.
+- Update CI/CD integrations beyond documenting guardrail commands.
+
+## Stakeholders
+- Product: TBD — assign once roadmap owner is identified.
+- Engineering: Codex orchestrator maintainer.
+- Design: N/A for infrastructure workflow setup.
+- QA: Guardrail reviewer (assign once test lead is identified).
+
+## Requirements
+- Launch a Codex MCP server rooted at `/Users/asabeko/Documents/Code/SXSWHACK25` and document connection details.
+- Draft and maintain a `/tasks/tasks-0001-sxswhack25.md` checklist using `[ ]` → `[x]` updates tied to manifest evidence.
+- Mirror canonical artifacts into `/docs` with timestamps and manifest references.
+- Store logs for `scripts/spec-guard.sh --dry-run`, `npm run lint`, and `npm run eval:test` inside `.runs/0001/<timestamp>/`.
+- Update `.runs/.../manifest.json` with every executed command, exit status, and log path.
+
+## Open Questions
+- Who owns ongoing guardrail maintenance after bootstrap?
+- Are additional evaluation suites (integration, e2e) required for this repo?
+- Should the MCP server run persistently on developer machines or only on demand?
+
+## Metrics & Validation
+- 100% of required guardrail commands complete with exit code `0` and logged artifacts.
+- `/tasks` and `/docs` remain in sync with checkbox updates validated against manifests.
+- Reviewers can reproduce any logged command using the manifest metadata without rerunning the orchestrator.
diff --git a/tasks/index.json b/tasks/index.json
index bff0171..6c224a9 100644
--- a/tasks/index.json
+++ b/tasks/index.json
@@ -3,9 +3,9 @@
     {
       "id": "0001",
       "slug": "sxswhack25",
-      "prd": "",
-      "tasks": "",
-      "status": "planned"
+      "prd": "tasks/0001-prd-sxswhack25.md",
+      "tasks": "tasks/tasks-0001-sxswhack25.md",
+      "status": "in-progress"
     }
   ],
   "specs": []
diff --git a/tasks/tasks-0001-sxswhack25.md b/tasks/tasks-0001-sxswhack25.md
new file mode 100644
index 0000000..4c95a64
--- /dev/null
+++ b/tasks/tasks-0001-sxswhack25.md
@@ -0,0 +1,20 @@
+# Task List — Codex Orchestrator Bootstrap (0001)
+
+## Checklist
+- [ ] Guardrail dry run from orchestrator repo recorded (`.runs/0001/<run>/guardrail-dry-run.log`).
+- [ ] Deterministic MCP session launched and documented (`.runs/local-mcp/<run>/manifest.json`).
+- [ ] `/tasks` artifacts updated with canonical PRD and checklist mirrors.
+- [ ] Guardrail validations (`scripts/spec-guard.sh --dry-run`, `npm run lint`, `npm run eval:test`) executed against target repo with logs under `.runs/0001/<run>/`.
+- [ ] Manifest updated with command statuses, log paths, and diff artifacts.
+- [ ] Summary prepared referencing active manifest and repo ready for commit.
+
+## Relevant Files
+- `tasks/index.json`
+- `tasks/0001-prd-sxswhack25.md`
+- `docs/PRD.md`
+- `.runs/0001/<timestamp>/`
+- `.runs/local-mcp/<timestamp>/`
+
+## Notes
+- Follow `.agent/readme.md` and `.agent/AGENTS.md` for SOP alignment.
+- Use `[ ]` → `[x]` transitions with explicit manifest references when completing checklist entries.
